{"version":3,"file":"static/js/854.c4f8f012.chunk.js","mappings":"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","sources":["components/ContainerLoader/ContainerLoader.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js","redux/contacts/contactsSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;","import styled from 'styled-components';\nimport { Form, ErrorMessage, Field } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  position: relative;\n  width: 250px;\n  margin: ${p => p.theme.spacing(10)} auto 0;\n  background: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.spacing(8)};\n\n  @media only screen and (min-width: 768px) {\n    width: 400px;\n  }\n`;\n\nexport const StyledInput = styled(Field)`\n  display: block;\n  width: 100%;\n  padding: 0 ${p => p.theme.spacing(5)};\n  margin-bottom: ${p => p.theme.spacing(2)};\n  line-height: ${p => p.theme.spacing(10)};\n  border-width: 0;\n  border-radius: ${p => p.theme.spacing(5)};\n\n  &:focus,\n  :hover {\n    background-color: ${p => p.theme.colors.bgInput};\n  }\n`;\n\nexport const FormInner = styled.div`\n  padding: ${p => p.theme.spacing(12)};\n`;\n\nexport const ButtonSubmit = styled.button`\n  text-decoration: none;\n  display: block;\n  margin: 0 auto;\n  margin-top: ${p => p.theme.spacing(8)};\n  width: 150px;\n  height: 40px;\n  border-radius: ${p => p.theme.spacing(5)};\n  font-family: inherit;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  border-color: ${p => p.theme.colors.grey};\n  background: transparent;\n  box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);\n  transition: 0.3s;\n  cursor: pointer;\n\n  &:focus,\n  &:hover {\n    background-color: ${p => p.theme.colors.grey};\n    box-shadow: 0 15px 20px rgba(0, 128, 128, 0.4);\n    color: ${p => p.theme.colors.white};\n    transform: translateY(-7px);\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.error};\n  font-size: 14px;\n  display: block;\n`;\n\nexport const Circle = styled.div`\n  position: absolute;\n  bottom: 80px;\n  left: -55px;\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background: ${p => p.theme.colors.accent};\n`;\n\nexport const LeftDecoration = styled.div`\n  content: '';\n  position: absolute;\n  bottom: 60px;\n  left: -30px;\n  width: 50px;\n  height: 20px;\n  background: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.spacing(5)};\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: ${p => p.theme.spacing(8)};\n  }\n\n  &::before {\n    top: -20px;\n    background-color: rgb(156, 213, 224);\n  }\n\n  &::after {\n    top: 20px;\n    left: 10px;\n    background-color: rgb(175, 202, 222);\n  }\n`;\n\nexport const RightDecoration = styled.div`\n  content: '';\n  position: absolute;\n  top: 60px;\n  right: -30px;\n  width: 50px;\n  height: 20px;\n  background: ${p => p.theme.colors.accent};\n  border-radius: ${p => p.theme.spacing(5)};\n\n  &::before,\n  &::after {\n    content: '';\n    position: absolute;\n    width: 50px;\n    height: 20px;\n    border-radius: ${p => p.theme.spacing(8)};\n  }\n\n  &::before {\n    top: -20px;\n    right: 0;\n    background-color: rgb(211, 239, 242);\n  }\n\n  &::after {\n    top: 20px;\n    right: 10px;\n    background-color: rgb(197, 234, 238);\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  FormInner,\n  ButtonSubmit,\n  Error,\n  StyledInput,\n  Circle,\n  LeftDecoration,\n  RightDecoration,\n} from './RegisterForm.styled';\nimport { register } from '../../redux/auth/authAPI';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n    .trim()\n    .min(2, 'Too Short!')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required('This is a required field'),\n  email: Yup.string()\n    .email('Invalid email address')\n    .required('This is a required field'),\n  password: Yup.string()\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/,\n      'Please create a stronger password. It must contain one uppercase and one lowercase letter'\n    )\n    .required('This is a required field'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n    Notify.success(`${values.name} registered!`);\n    actions.resetForm({ name: '', email: '', password: '' });\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', email: '', password: '' }}\n      onSubmit={(values, actions) => {\n        handleSubmit(values, actions);\n      }}\n      validationSchema={ContactSchema}\n    >\n      <StyledForm autoComplete=\"off\">\n        <LeftDecoration></LeftDecoration>\n        <RightDecoration></RightDecoration>\n        <Circle></Circle>\n        <FormInner>\n          <label>\n            Name\n            <StyledInput name=\"name\" type=\"text\" />\n            <Error name=\"name\" component=\"span\" />\n          </label>\n          <label>\n            Email\n            <StyledInput name=\"email\" type=\"email\" />\n            <Error name=\"email\" component=\"span\" />\n          </label>\n          <label>\n            Password\n            <StyledInput name=\"password\" type=\"password\" />\n            <Error name=\"password\" component=\"span\" />\n          </label>\n          <ButtonSubmit type=\"submit\">Log In</ButtonSubmit>\n        </FormInner>\n      </StyledForm>\n    </Formik>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\nimport { RegisterForm } from '../components/RegisterForm/RegisterForm';\nimport { ContainerLoader } from 'components/ContainerLoader/ContainerLoader';\nimport { ColorRing } from 'react-loader-spinner';\nimport { selectIsLoading, selectError } from '../redux/contacts/contactsSelectors';\n\nexport default function Register() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n      {isLoading && (\n        <ContainerLoader>\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n          />\n        </ContainerLoader>\n      )}\n      {error && <span>Oops... There was an error! Please, reload this page!</span>}\n    </div>\n  );\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);"],"names":["ContainerLoader","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","p","theme","spacing","colors","accent","StyledInput","Field","_templateObject2","bgInput","FormInner","_templateObject3","ButtonSubmit","_templateObject4","grey","white","Error","ErrorMessage","_templateObject5","error","Circle","_templateObject6","LeftDecoration","_templateObject7","RightDecoration","_templateObject8","ContactSchema","Yup","shape","name","trim","min","matches","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","onSubmit","values","actions","register","Notify","concat","resetForm","handleSubmit","validationSchema","children","_jsxs","autoComplete","type","component","Register","isLoading","useSelector","selectIsLoading","selectError","Helmet","ColorRing","visible","height","width","ariaLabel","selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","createSelector","contact","toLowerCase","includes"],"sourceRoot":""}